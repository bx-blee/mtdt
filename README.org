#+title: MTDT: Mail Templating, Distribution and Tracking Emacs Package
#+DATE: <2024-02-19 Mon 16:27>
#+AUTHOR: Mohsen BANAN
#+OPTIONS: toc:4


~Blee Panel Controls~: [[elisp:(show-all)][Show-All]] | [[elisp:(org-shifttab)][Overview]] | [[elisp:(progn (org-shifttab) (org-content))][Content]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(progn (save-buffer) (kill-buffer))][S&Q]] | [[elisp:(save-buffer)][Save]]  | [[elisp:(kill-buffer)][Quit]]  | [[elisp:(bury-buffer)][Bury]]  \\
~Panel Links~:  [[file:../_nodeBase_/fullUsagePanel-en.org][Blee Panel]]

~See Also (Repo URls)~:  [[https://github.com/bx-blee/mtdt][mtdt]] |  [[https://github.com/bx-blee/mtdt-mailing][mailing]] | [[https://github.com/bx-blee/mtdt-distribution][distribution]] |  [[https://github.com/bx-blee/mtdt-names][names]]  |  [[https://github.com/bx-blee/mtdt-share][share]] |  [[https://github.com/bx-blee/mtdt-track][track]] 

* Overview
MTDT (Mail Templating, Distribution and Tracking) is part of Blee. Blee (ByStar Libre-Halaal Emacs Environment)
serves as the usage environment of BISOS (ByStar Internet Services OS). BISOS forms the foundation of the
"Libre-Halaal ByStar Digital Ecosystem." ByStar is rooted in the model of proper governance of polyexistentials
which rejects the Western Intelectual Propoerty Rights (IPR) regime. For a comprehensive description, please refer
to the book:  'The Nature of Polyexistentials' -- https://github.com/bxplpc/120033.

MTDT is developed in elisp with COMEEGA (Collaborative Org-Mode Enhanced Emacs Generalized Authorship). Think of
COMEEGA as inverse of literate programming. Please follow Blee-COMEEGA conventions when editing MTDT elisp files.

MTDT augments the Emacs email environment (Gnus) by providing templates for mailings and distributions. You can
think of MTDT as a Libre-Halaal Convivial equivalent of Constant Contact for Emacs.
MTDT allows you to create *Mailing Tempaltes* with content in 1) Plain Text, 2) Org-Msg, 3) LaTeX and 4) Plain Html.
The Mailing Templates can then be used to =Send= or =Distribute=  to =Recipients=.
=Recipients= can be derived from =Names= in address books such as =BBDB3=.

* Table of Contents     :TOC:
- [[#overview][Overview]]
- [[#abstract][Abstract]]
  - [[#mtdt-mailings-layer][MTDT-Mailings Layer]]
  - [[#mtdt-distributions-layer][MTDT-Distributions Layer]]
  - [[#mtdt-names-layer][MTDT-Names Layer]]
  - [[#mtdt-share-layer][MTDT-Share Layer]]
  - [[#mtdt-tracking-layer][MTDT-Tracking Layer]]
- [[#mtdt-installation][MTDT Installation]]
  - [[#point-to-the-mtdt-pkg-install-in-blee][Point to the MTDT pkg install in blee.]]
- [[#mtdt-features-summary][MTDT Features Summary]]
- [[#blee-panels-and-documentation][Blee Panels and Documentation]]
- [[#mtdt-usage-and-examples][MTDT Usage and Examples]]
- [[#mtdt-layering-packages-urls-and-overview][MTDT-Layering, Packages URLs and Overview]]

* Abstract

Emacs has a very rich email environment. The scope of Emacs email environment is primarily that of sending,
receiving, processing, searching, archiving and integration with address books, org-mode and other global
minor-modes. Mail Templating, Distribution and Tracking (MTDT) are currently not well supported. In the context of
/Email Marketting/, in the proprietary world, things like /SendGrid/ and /Constant Contact/ have appeared on the
scene. Such capabilities are best supported when they are integrated with the MUA. Hence, it does make sense to
build much MTDT capabilities inside of emacs. Mass email distribution, email commencing and email templating have
much overlap.

Implemetation of MTDT is layered. Each layer is implemented as an Emacs package. See  [[MTDT-Layering]] for details.

** MTDT-Mailings Layer

This is an overview of <<MTDT-Mailings Layer>>.

The primary concept of MTDT-Mailings  is the *X-Mailing-Name File*. This is a file that contains a complete or
a partial email. Both its headers and its body can then be customized by MTDT facilities.
*X-Mailing-Name File* s contain some special headers that direct and customize operations of MTDT facilities.
These MTDT Headers include:

- *X-Mailing-Name:* is a string that is used to internalize and identify the *X-Mailing-Name File* to
  MTDT. There is two-way and one-to-one mapping between these two. The *Derive* family of of functions of
  MTDT are used create this mapping. Once *Derived*, the *X-Mailing-Name File* can be accessed through its
  *X-Mailing-Name:*. *X-Mailing-Name File* can be anywhere in the file system and are not part of MTDT untill
  they are *Derived*.

- *X-ComposeFwrk:* specifies the framework (mode) to be used for handling the body of an *X-Mailing-Name File*.
  When the body of the message is in org-mode, *OrgMsg* mode is used. Valid values of
  1) Plain Text, 2) Org-Msg, 3) LaTeX and 4) Plain Html.  See  [[https://github.com/bx-blee/mtdt-mailing][mailing]] 's Blee-Panel for details.

- *X-MailingParams:* specifies named parameters for use by MTDT.

- *X-MailingParams: :extSrcBase <dirPathOrNil>* specifies as to whether or not the body of the message is to be
  considered *External* or *Native*. *External* only applies to *X-ComposeFwrk:* Org-Msg, LaTeX. For a
  *X-Mailing-Name File* whose body was produced using external facilities such as LaTeX (lcntProc.sh), when
  *X-MailingParams: :extSrcBase <dirPath>* is set, when *sendingEnvironment* is created, the entire directory of
  *X-Mailing-Name File* is copied to the *sendingEnvironment* environemnt.

 - *X-MTDT-Customize:* specifies a path to an elisp file, or a function that can run in the *sendingEnvironment*
   to customize both headers and body of the outgoing message.

See  [[https://github.com/bx-blee/mtdt-mailing][mailing]] 's Blee-Panel for details.

*X-Mailing-Name File* can be used for different purposes, including:

1) As a *CommenceMailing*.  No To Line, No Compleete Content,  From, Subject and Signature.
2) As a *TemplateMailing*. To Line + No Complete Content, From, Subject and Signature.
3) As a *DistributionMailing*. No To Line, Complete Content, From and Subject.
4) As a *MuaStencilMailing*. MUA uses in Reply and Forward.

The above types each have a *Selected* instance.

When a *Selected* mailing is *Sent* it first becomes an *OutGoingMessage*.

See  [[https://github.com/bx-blee/mtdt-mailing][mailing]] 's Blee-Panel for details.


** MTDT-Distributions Layer

This is an overview of <<MTDT-Distributions Layer>> which builds on the  [[MTDT-Mailings Layer]].

The primary concept of MTDT-Distributions  is the elisp abstraction of *Recipients*.
*Recipients* apply to a single *OutGoingMessage*. A list of *Recipients* constitutes a
*RecipientsList*. A *Distribution* is the exercising of  a *RecipientsList* to an *OutGoingMessagesList*
where each *Recipients* is applied to each *OutGoingMessage*.

When a *RecipientsList* is selected it comes the *SelectedRecipientsList*.

** MTDT-Names Layer

This is an overview of <<MTDT-Names Layer>> which builds on the [[MTDT-Distributions Layer]] and [[MTDT-Mailings Layer]].

The primary concept of MTDT-Names is the elisp abstraction of  *Name* and *Names*.
A *Name* maps to a single entry in the *AddressBook* say ~bbdb~. *Names* can be converted to *RecipientsList*.

** MTDT-Share Layer

This is an overview of <<MTD-Share Layer>> which builds on the
 [[MTDT-Names Laye]]r  and [[MTDT-Distributions Layer]] and [[MTDT-Mailings Layer]].

Based on a *SelectedRecipientsList* MTDT facilities can provide for *Sharing*
when using Dire-mode or through interfacing with the browser.

** MTDT-Tracking Layer

This is an overview of <<MTD-Tracking Layer>> which builds on the [[MTD-Share Layer]] and
 [[MTDT-Names Laye]]r  and [[MTDT-Distributions Layer]] and [[MTDT-Mailings Layer]].

Sending and distributions can be tracked based on the information provided by logs of injection, submission
and Non-Delivery-Reports and Delivery-Reports and Receipt-Notification.

All of that tracking can be arranged per *OutGoingMessage*.

See MARMEE for details.


* MTDT Installation

** TODO Point to the MTDT pkg install in blee.

* MTDT Features Summary

MTDT allows you to create *Mailing Tempaltes* with content in 1) Plain Text, 2) Org-Msg, 3) LaTeX and 4) Plain
Html.
- Mailings Content Creation
    - Plain Text /Native/ -- Content of Mailings and Templates
    - Org-Msg /Native/  (with html exports) -- OrgMsg https://github.com/jeremy-compostella/org-msg is a GNU/Emacs global minor mode mixing up Org mode and
Message mode to compose and reply to emails.
    - LaTeX /External/ (with HaVeA html exports and pdf of content attachment)
    - Html /External/
- Mailings Content External Composition
    - Latex (Lcnt)
    - HTML Editor
- Mailings Customization
    - Header Customization
    - Content Customization
- Mail Templates -- Mailings with pre-specified recipients
- Reply and Forward Stensils
- Mailings Selection
- Extensive Global Minor Mode Menus
- Mail Sending and Origination Editing
    - Batch
    - UnSent Buffer Editing
    - External Compostion/Editing
- MTDT-Send -- AddressBook (bbdb) Integration
- MTDT-Distribution
- Distribution List Selection
- MTDT-Share
    - Dired Mail Sharing
    - Browser Mail Sharing

* Blee Panels and Documentation

Documentation of MTDT is in the form of a series of related panels. Primary MTDT Blee-Panel is
[[file:./panels/mtdt/_nodeBase_/fullUsagePanel-en.org]].
With some limitations, MTDT can be used as a stand alone Emacs package.

Key components of BISOS and Blee that interact with MTDT include:

- MARMEE -- Multi-Account Resident Mail Exchange Environment
- LCNT -- ByStar Libre Content production, publication
- Mailings, Names, Dist facilities of BISOS

* MTDT Usage and Examples

The examples directory in each of the MTDT packages includes relevant examples.

See ./examples/recipientsList.el for details.

* MTDT-Layering, Packages URLs and Overview

<<MTDT-Layering>> Analysis and implementation of MTDT lends itself well to layering.
This table, provides a summary.

|--------+-------------------+----------------------+-------------------------------------------|
|   MTDT | Layer             | Package Repo         | Description                               |
| Layers | Name              | URL                  |                                           |
|--------+-------------------+----------------------+-------------------------------------------|
|      1 | <<mailings>>      | [[https://github.com/bx-blee/mtdt-mailing][bx-blee/mtdt-mailing]] | Create&Use of Mailings/Templates/Stensils |
|      2 | <<distributions>> | [[https://github.com/bx-blee/mtdt-mailing][bx-blee/distribution]] | Distribute to recips lists                |
|      3 | <<names>>         | [[https://github.com/bx-blee/mtdt-names][bx-blee/mtdt-names]]   | Use AddressBook to create recips          |
|      4 | <<shares>>        | [[https://github.com/bx-blee/mtdt-share][bx-blee/mtdt-share]]   | Send from browser/dired/etc               |
|      5 | <<tracking>>      | [[https://github.com/bx-blee/mtdt-track][bx-blee/mtdt-track]]   | Handle Non Delivery Reports etc           |
|--------+-------------------+----------------------+-------------------------------------------|



A graphical overview of the layering MTDT model is provided below.

#+BEGIN_COMMENT
#+html: <p align="center"><img src="images/mtdtModel.jpg" /></p>.
#+html: <p align="center"><img src="images/mtdtModel.jpg" /></p>
#+END_COMMENT

#+CAPTION: MTDT Layering C-c C-x C-v (org-toggle-inline-images)
#+NAME:   fig:images/mtdtModel.jpg
#+ATTR_HTML: :width 1100px
[[./images/mtdtModel.jpg]]


The graphviz below provides an overview of the key concepts and abstractions of
MTDT packages.


#+CAPTION: MTDT Concepts Graphviz C-c C-x C-v (org-toggle-inline-images)
#+NAME:   fig:images/mtdtConcepts
#+ATTR_HTML: :width 1100px
[[./images/mtdtConcepts.svg]]

The graphviz below provides an overview of headers used in MTDT-Mailings. See
https://github.com/bx-blee/mtdt-mailing for more details.


#+CAPTION: MTDT Concepts Graphviz C-c C-x C-v (org-toggle-inline-images)
#+NAME:   fig:images/mtdtConcepts_l0
#+ATTR_HTML: :width 1100px
[[./images/mtdtConcepts_l0.svg]]

The graphviz below provides an overview of headers used in MTDT-Mailings. See
https://github.com/bx-blee/mtdt-mailing for more details.


#+CAPTION: MTDT Concepts Graphviz C-c C-x C-v (org-toggle-inline-images)
#+NAME:   fig:images/mtdtConcepts_l1
#+ATTR_HTML: :width 1100px
[[./images/mtdtConcepts_l1.svg]]

The graphviz below provides an overview of headers used in MTDT-Distributions. See
https://github.com/bx-blee/mtdt-distribution for more details.



#+CAPTION: MTDT Concepts Graphviz C-c C-x C-v (org-toggle-inline-images)
#+NAME:   fig:images/mtdtConcepts_l2
#+ATTR_HTML: :width 1100px
[[./images/mtdtConcepts_l2.svg]]

The graphviz below provides an overview of headers used in MTDT-Share. See
https://github.com/bx-blee/mtdt-share for more details.


#+CAPTION: MTDT Concepts Graphviz C-c C-x C-v (org-toggle-inline-images)
#+NAME:   fig:images/mtdtConcepts_l3
#+ATTR_HTML: :width 1100px
[[./images/mtdtConcepts_l3.svg]]





# ###+BEGIN: blee:bxPanel:footerOrgParams
#+STARTUP: overview
#+STARTUP: lognotestate
#+STARTUP: inlineimages
#+SEQ_TODO: TODO WAITING DELEGATED | DONE DEFERRED CANCELLED
#+TAGS: @desk(d) @home(h) @work(w) @withInternet(i) @road(r) call(c) errand(e)
#+CATEGORY: N:mtdt-conceptAndDesign
# ###+END
# ###+BEGIN: blee:bxPanel:footerEmacsParams :primMode "org-mode"
# Local Variables:
# eval: (setq-local toc-org-max-depth 4)
# eval: (setq-local ~selectedSubject "noSubject")
# eval: (setq-local ~primaryMajorMode 'org-mode)
# eval: (setq-local ~blee:panelUpdater nil)
# eval: (setq-local ~blee:dblockEnabler nil)
# eval: (setq-local ~blee:dblockController "interactive")
# eval: (img-link-overlays)
# eval: (set-fill-column 115)
# eval: (blee:fill-column-indicator/enable)
# eval: (bx:load-file:ifOneExists "./panelActions.el")
# End:

# ###+END
